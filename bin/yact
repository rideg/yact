#!/usr/bin/env bash

################################################################################
# Main entry point for YACT.
# -- Globals:
#  TRACE - enables tracing if set.
#  YACT_DIR - Working directory for YACT.
#  TODO_FILE - The file name of the current list.
#  RUN - Directory for runtime temproray files.
# -- Input: Command.
# -- Output: The result of the command.
################################################################################
# shellcheck source=/dev/null
main() {
  [[ "$TRACE" ]] && set -x

  pushd "$(dirname "$0")" &> /dev/null
  cd ..

  test ! -d "${YACT_DIR}" && YACT_DIR=~/.yact
  RUN=$YACT_DIR/.run

  test ! -d $RUN && mkdir -p $RUN
  . ./config

  test -f $YACT_DIR/config && . "$YACT_DIR"/config

  . lib/util.sh
  . lib/formatting.sh
  . lib/lists.sh
  . lib/tasks.sh

  test -f $YACT_DIR/.last && . "$YACT_DIR"/.last
  export FILE=$YACT_DIR/$TODO_FILE

  case "$1" in
    -v) _show_version;;
    -h) _show_help;;
    -l) shift; _parse_list_opts "$@";;
     *) _parse_task_opts "$@";;
  esac
  exit_ 0
}

################################################################################
# Checks if the the actual list exists. 
# -- Globals:
#  FILE - Current todo list's file.
# -- Input: Arguments for list operations.
# -- Output: None.
################################################################################
_require_actual() {
   [[ -f "$FILE" ]] || \
      fatal 'No todo list has been selected, please select/create one.'
}

################################################################################
# Parses the options for lists.
# -- Globals: None.
# -- Input: Arguments for list operations.
# -- Output: None.
################################################################################
_parse_list_opts() {
  local cmd=$1
  shift
  if [[ "$cmd" != 'new' ]]; then
    _require_actual
  fi
  if [[ -n "$cmd" ]]; then
    case $cmd in
       switch) switch_list "$1";;
       new) new_list "$@";;
       delete) delete_list "$1";;
       modify) modify_list "$@";;
       show) ;;
       *) fatal "Cannot recognize command: $cmd"
    esac
  fi
  show_lists
}

################################################################################
# Parses the options for tasks.
# -- Globals: None.
# -- Input: Arguments for task operations.
# -- Output: None.
################################################################################
_parse_task_opts() {
  _require_actual
  local cmd=$1
  shift
  if [[ -n "$cmd" ]]; then
    case $cmd in
      new) new_task "$@";;
      delete) delete_task "$1";;
      modify) modify_task "$@";;
      move) move_task "$1" "$2";;
      'done') set_done "$1" 1;;
      undone) set_done "$1" 0;;
      show) ;;
      *) fatal "Cannot recognize command: $cmd";;
   esac
  fi
  show_tasks
}

main "$@"

