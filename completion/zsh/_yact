#compdef yact
#autoload
# YACT - Yet Another Command line TODO
# Copyright(c) 2016 Sandor Rideg
# MIT Licensed

zstyle -T ':completion:*:*:yact:*' tag-order && zstyle ':completion:*:*:yact:*' tag-order 'task-commands'

test -z "$YACT_DIR" && YACT_DIR=~/.yact

__yact_list_commands() {
   local -a list
   list=(
     new:'Creates a new list.'
     delete:'Deletes and existing list'
     modify:'Modifies the description of a curretn a list'
     switch:'Switches to the given list'
     show:'Shows all the extisting lists'
   )
   _describe -t list-commands 'list related commands' list && ret=0
}

__yact_task_commands() {
  local -a list
  list=(
    add:'Adds a new task to the current list'
    delete:'Removes the given task from the current list'
    done:'Marks the given task as completed'
    undone:'Marks the given task as not yet finished'
    show:'Shows the tasks from the current list'
  )
  _describe -t task-commands 'task related commands' list && ret=0
}

__show_list_ids() {
  local -a list
  list=()
  for filename in "$YACT_DIR"/*.txt; do
    list+=(${${filename/*_/}/\.txt/}:"$(head -n 1 "$filename")")
  done
  _describe -t list-ids 'list ids' list && ret=0
}

# shellcheck source=/dev/null
__yact_list_tasks() {
  local -a file list
  local IFS
  local cmd;
  cmd=$1
  test -e $YACT_DIR/.last && . "$YACT_DIR"/.last
  file=$YACT_DIR/$TODO_FILE
  IFS=';'
  list=()
  if [ ! -z "$file" ] && [ -e "$file" ]; then
   while read -r id task task_status; do
     if [[ ($cmd = 'done' &&  "$task_status" -eq '0') \
         || ($cmd = 'undone' && "$task_status" -eq '1' ) ]]; then
        list+=("$id":$task)
     fi
   done <<<"$(sed '1,2d'  "$file" | sort -t';' -n -k1)"
   _describe -t task-ids 'task ids' list && ret=0
  fi
}

__yact_main() {
  local curcontext="$curcontext" state line
	typeset -A opt_args

  _arguments -C \
		'-l[Work with lists]: :->lists' \
		'-v[version]: :->end' \
		'-h[help]: :->end' \
		': :->tasks' \
		'(-)*:: :->arg' && return

   case "$state" in
       (tasks)
          case "$opt_args" in
           (delete|switch|modify) __show_list_ids;;
           (new|show) ;;
           *) __yact_task_commands;;
          esac;
        ;;
        (lists)
            __yact_list_commands
        ;;
        (arg)
           case "${${line[@]}[1]}" in
            ('done'|undone|delete|modify)
              if [ ${#${line[@]}} -eq 1 ]; then
                __yact_list_tasks ${${line[@]}[1]}
              fi 
            ;;
           esac;
        ;;
    esac;
}

__yact_main