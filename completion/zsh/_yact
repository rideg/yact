#compdef yact
#autoload
# YACT - Yet Another Command line TODO
# Copyright(c) 2016 Sandor Rideg
# MIT Licensed

zstyle -T ':completion:*:*:yact:*' tag-order && \
	zstyle ':completion:*:*:yact:*' tag-order 'task-commands'

test -z "$YACT_DIR" && YACT_DIR=~/.yact

__yact_list_commands() 
{
   local -a list
   list=(
     new:'Creates a new list.'
     delete:'Deletes and existing list'
     modify:'Modifies the description of a curretn a list'
     switch:'Switches to the given list'
     show:'Shows all the extisting lists'
   )
   _describe -t list-commands 'list related commands' list && ret=0
}

__yact_task_commands() {
  local -a list
  list=(
    add:'Adds a new task to the current list'
    delete:'Removes the given task from the current list'
    done:'Marks the given task as completed'
    undone:'Marks the given task as not yet finished'
    show:'Shows the tasks from the current list'
  )
  _describe -t task-commands 'task related commands' list && ret=0
}

__yact_main() {
  local curcontext="$curcontext" state state_descr line
	typeset -A opt_args
	local -a orig_words

  _arguments -C \
		'-l[Work with lists]: :->lists' \
		'-v[version]' \
		'-h[help]' \
		'(-): :->tasks' \
		'(-)*:: :->arg' && return

    case "$state" in
       (tasks)
            __yact_task_commands
        ;;
        (lists)
            __yact_list_commands
        ;;
    esac;
}

__yact_main